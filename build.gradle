plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'

}

group = 'com.joeunseo'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

bootJar {
    jar.enabled = false
    archiveFileName = 'myapp.jar'
}

jar {
    manifest {
        attributes 'Main-Class': 'com.joeunseo.hotel.HotelSpringApplication'
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'

    // QueryDSL 의존성
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
implementation 'javax.persistence:javax.persistence-api:2.2'
    
    // Hibernate or other JPA provider
    implementation 'org.hibernate:hibernate-core:5.6.9.Final'
    // Spring Boot 스타터
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Lombok (컴파일 타임 의존성)
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // MySQL Connector
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.2'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Spring Boot DevTools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // 테스트 관련 의존성
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.9.3'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.3'

    // Swagger 설정을 위한 Springdoc OpenAPI
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    // Jsoup & selenium
    implementation 'org.jsoup:jsoup:1.15.4'
    implementation 'org.seleniumhq.selenium:selenium-java:4.12.1'

    // thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
}

sourceSets {
    main {
        java {
            srcDir 'build/generated/sources/annotationProcessor/java/main'
        }
    }
}

tasks.withType(JavaCompile) {
    options.annotationProcessorPath = configurations.annotationProcessor
}

